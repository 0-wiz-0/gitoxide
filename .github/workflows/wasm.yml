name: WASM

on:
  push:
    branches: [ main ]
    tags-ignore: [ '*' ]
    paths:
      - '.github/**'
      - 'git-pack/**'
      - '*.toml'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/**'
      - 'git-pack/**'
      - '*.toml'

jobs:
  wasm:
    name: WebAssembly
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        target: [ wasm32-unknown-unknown, wasm32-wasi ]
    steps:
      - uses: actions/checkout@master
      - name: Install Rust
        run: rustup update stable && rustup default stable && rustup target add ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
      - run: set +x; for name in git-actor git-attributes git-bitmap git-chunk git-command git-commitgraph git-date git-glob git-hash git-hashtable git-mailmap git-object git-packetline git-path git-pathspec git-quote git-refspec git-revision git-traverse git-validate; do (cd $name && cargo build --target ${{ matrix.target }}); done
        name: crates without feature toggles
      - run: set +x; for feature in progress fs-walkdir-parallel parallel io-pipe crc32 zlib zlib-rust-backend fast-sha1 rustsha1 cache-efficiency-debug; do (cd git-features && cargo build --features $feature --target ${{ matrix.target }}); done
        name: features of git-features
      - run: set +x; for name in git-diff git-pack; do (cd $name && cargo build --features wasm --target ${{ matrix.target }}); done
        name: crates with 'wasm' feature
      - run: cd git-pack && cargo build --all-features --target ${{ matrix.target }}
        name: git-pack with all features (including wasm)
