//!

use bstr::BStr;

///
pub mod worktree;

///
pub mod index;

///
pub mod recorder;

///
pub mod diff;

/// The status of an index entry in a worktree
#[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Debug, Default)]
pub enum Status<T = ()> {
    #[default]
    /// The file in the worktree is identical to the index entry
    Unchanged,
    /// An index entry has no corresponding file in the worktree.
    Removed,
    /// The type of file changed (symlink <=> file) performing a
    /// diff is usually not necessary/desired
    TypeChange,
    /// The worktree file that belongs to this index has a changed stat
    /// therefore could have been modified.
    ///
    /// Note that this doesn't necessarily mean that the *content* of the file changed.
    /// A modified even is emitted whenever a change could have occurred. It is up
    /// to API consumers to check the file for content changes
    Modified {
        /// Indicates that one of the stat changes was an executable bit change
        /// which is a significant change itself (for git status)
        /// these files don't need to be rechanged
        executable_bit_changed: bool,
        /// The output of the diff run on this entry.
        /// if the there is no content change and only the executable bit
        /// changed than this is `None`
        diff: Option<T>,
    },
    /// An index entry that correspond to an untracked worktree file marked with `git add`
    Added,
}

///
pub trait Collector<'index>: Send {
    /// Data generated by comparing two files/entries
    type Diff;
    ///
    fn visit_entry(
        &mut self,
        entry: &'index gix_index::Entry,
        path: &'index BStr,
        status: Status<Self::Diff>,
        conflict: bool,
    );
}
